// mixins here

//Для шрифтов
@mixin font($size, $weight, $line-height, $color: null) {
  color: $color;
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

@mixin icon($icon) {
  -webkit-mask: url("~/assets/svg/" + $icon + ".svg") no-repeat 50% 50%;
  mask: url("~/assets/svg/" + $icon + ".svg") no-repeat 50% 50%;
}

@mixin up-breakpoint($point) {
  @if $point==xl {
    @media screen and (min-width: 1140px) {
      @content;
    }
  }

  @if $point==xxl {
    @media screen and (min-width: 1920px) {
      @content;
    }
  }
}

@mixin breakpoint($point) {
  @if $point==xl {
    @media screen and (max-width: 1140px) {
      @content;
    }
  }
}

@mixin px($value) {
  padding-left: $value;
  padding-right: $value;
}

@mixin py($value) {
  padding-top: $value;
  padding-bottom: $value;
}

@mixin mx($value) {
  margin-left: $value;
  margin-right: $value;
}

@mixin my($value) {
  margin-top: $value;
  margin-bottom: $value;
}

@mixin carousel-animation($images-count) {
  0% {
    transform: translateX(0);
  }

  @for $i from 0 through $images-count - 1 {
    $vw-slide: calc(100/$images-count);
    $point1: $i * ($vw-slide) + $vw-slide;
    $point2: $i * ($vw-slide) + $vw-slide * 2;

    #{$point1}% {
      transform: translateX(calc(($i + 1) * (-#{$vw-slide}vw)));
    }

    #{$point2}% {
      transform: translateX(calc(($i + 1) * (-#{$vw-slide}vw)));
    }
  }
}